[{"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\layout.jsx":"1","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\page.jsx":"2","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\home.jsx":"3","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\login.jsx":"4","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\productos\\page.jsx":"5","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\usuarios\\page.jsx":"6","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\navigation.jsx":"7","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\usuarios\\[id]\\page.jsx":"8"},{"size":467,"mtime":1696364693223,"results":"9","hashOfConfig":"10"},{"size":1732,"mtime":1696370174349,"results":"11","hashOfConfig":"10"},{"size":150,"mtime":1696356988983,"results":"12","hashOfConfig":"10"},{"size":3691,"mtime":1696369331711,"results":"13","hashOfConfig":"10"},{"size":1004,"mtime":1696372420914,"results":"14","hashOfConfig":"10"},{"size":12565,"mtime":1696403518512,"results":"15","hashOfConfig":"10"},{"size":755,"mtime":1696393683646,"results":"16","hashOfConfig":"10"},{"size":158,"mtime":1696375715857,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dmaemg",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\layout.jsx",[],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\page.jsx",[],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\home.jsx",[],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\login.jsx",["43"],[],"\"use client\"\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport IconUser from \"./images/user_icon.png\";\r\nimport Image from 'next/image'\r\nimport \"./styles/login.css\"\r\n\r\n\r\nfunction Login(props, params){\r\n const [isPass, setIsPass] = useState(false);\r\n const [loginData, setLoginData] = useState({username:'', password:''});\r\n const [passType, setPassType] = useState(\"password\")\r\n   async function startMySession(e){\r\n        e.preventDefault();\r\n        let url = 'https://fakestoreapi.com/auth/login'\r\n        \r\n        let data={\r\n            username: loginData.username,\r\n            password: loginData.password\r\n        }\r\n   \r\n        try{\r\n            const response = await fetch(url,{\r\n                method:'POST',\r\n                headers: {'Content-Type' : 'application/json'},\r\n                body:JSON.stringify(data)\r\n            })         \r\n            \r\n            const dataResponse = await response.json();\r\n            \r\n            if(dataResponse.hasOwnProperty('token')){\r\n                props.onLogin()\r\n                localStorage.setItem(\"token_session\", dataResponse.token)\r\n            }\r\n        }catch(error){\r\n            props.onToast(\"Error\", error.toString())\r\n        }\r\n    }\r\n\r\n    function changePassVisibility(obj){\r\n        let btn = document.getElementById(obj.btnpass)\r\n\r\n        let temp = !isPass\r\n        setIsPass(temp)\r\n\r\n        \r\n        let pass = (temp)? \"text\" : \"password\"\r\n        setPassType(pass)\r\n        btn.innerHTML= temp ? 'Show' : 'Hide' \r\n    }\r\n\r\n    //validations\r\n    function changeUser(event){\r\n        let text = event.target.value\r\n        setLoginData(obj=>({...obj,username:text}))\r\n    }\r\n   function changePass(event){\r\n         let text = event.target.value\r\n         setLoginData(obj=>({...obj, password:text}))\r\n   }\r\n    return(\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <Image src={IconUser} className=\"icon-user\" ></Image>\r\n                <br/>\r\n                <h1>Login</h1>\r\n    \r\n    {/* login form */}\r\n                <div className=\"content\">\r\n                    <form onSubmit={startMySession}>\r\n                        <div className=\"section\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                                <br></br>\r\n                            <input id=\"username\" type=\"text\" placeholder=\"example123\" required\r\n                             onChange={changeUser} value={loginData.username}></input>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"section\">\r\n                            <label htmlFor=\"password\">pasword</label>\r\n                                <br></br>\r\n                            <input id=\"input-password\" type={passType} placeholder=\"*******\" required\r\n                                 onChange={changePass} value={loginData.password}/>\r\n                           \r\n                            <div className=\"container-pass-visibility\">\r\n                                <label id=\"btn-pass\" htmlFor=\"pasword-visibility\" onClick={() =>(changePassVisibility({\r\n                                    'password': \"input-password\",\r\n                                    'btnpass': \"btn-pass\",}))}>Show</label>\r\n                                <input type=\"checkbox\" id=\"pasword-visibility\"></input>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                       <button type=\"submit\" className=\"btn-log\">Log in</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\productos\\page.jsx",[],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\usuarios\\page.jsx",["44"],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\components\\navigation.jsx",[],[],"D:\\LENGUAJES_DE_PROGRAMACION\\nextjs\\crud_nextjs\\app\\usuarios\\[id]\\page.jsx",[],[],{"ruleId":"45","severity":1,"message":"46","line":64,"column":17,"nodeType":"47","endLine":64,"endColumn":62},{"ruleId":"48","severity":1,"message":"49","line":137,"column":37,"nodeType":"47","endLine":137,"endColumn":179},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element"]